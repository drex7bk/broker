BROKER SCHEMA consultarEncabezado

DECLARE soap NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';

CREATE COMPUTE MODULE ConsultarEncabezado_FanOut
	CREATE FUNCTION MAIN() RETURNS BOOLEAN
	BEGIN
		SET OutputLocalEnvironment = InputLocalEnvironment;
		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.MQMD.CorrelId = InputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier;
		
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE COMPUTE MODULE ConsultarEncabezado_MQToSoap
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyEntireMessage();
		SET OutputLocalEnvironment = InputLocalEnvironment;
		SET OutputLocalEnvironment.Destination.SOAP.Request.UserContext = InputRoot.MQMD.CorrelId;
		SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = InputRoot.MQMD.MsgId; 
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE COMPUTE MODULE ConsultarEncabezado_FanIn
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = 
				InputRoot.ComIbmAggregateReplyBody.*[<].MQMD.MsgId;
		DECLARE INREF REFERENCE TO  
		InputRoot.ComIbmAggregateReplyBody.*[<].XMLNSC.soap:Envelope.soap:Body.ns:submitPOResponse; 
		SET OutputRoot.SOAP.Body.ns:OrderResponse.Status = INREF.orderStatus;
		DECLARE OUTREF REFERENCE TO  OutputRoot.SOAP.Body.ns:OrderResponse;
		SET OUTREF.AMT = INREF.orderAmt;
		SET OUTREF.PartNo = INREF.partNo;
		SET OUTREF.PartQuantity = INREF.partQuantity;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;