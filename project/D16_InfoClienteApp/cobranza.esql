CREATE COMPUTE MODULE MapDatosCobranzaReq_CpastcReq_FanOut
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE ns NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/cobranza/cpast/c';
		
		CALL CopyMessageHeaders(InputRoot, OutputRoot);
		
		SET OutputRoot.XMLNSC.ns:Request.user = FIELDVALUE(InputRoot.XMLNSC.nsInfoCli:consultarDatosCobranzaRequest.nsInfoCli:request.nsComun:usuarioM2K);		
		SET OutputRoot.XMLNSC.ns:Request.region = FIELDVALUE(InputRoot.XMLNSC.nsInfoCli:consultarDatosCobranzaRequest.nsInfoCli:request.nsComun:region);
		SET OutputRoot.XMLNSC.ns:Request.function = 'I*3B';
		SET OutputRoot.XMLNSC.ns:Request.action = 'C';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p01cuenta = FIELDVALUE(InputRoot.XMLNSC.nsInfoCli:consultarDatosCobranzaRequest.nsInfoCli:request.nsInfoCli:cuenta);
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p01cuenta.(XMLNSC.Attribute)longitud VALUE = '09';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p02maxRegistros = 1;

		SET OutputRoot.MQMD.CorrelId = InputRoot.MQMD.MsgId;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE MapDatosCobranzaReq_Retc2cReq_FanOut
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE ns NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/activaciones/retc2/c';
		
		CALL CopyMessageHeaders(InputRoot, OutputRoot);
		
		SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.ns:Request.user = FIELDVALUE(InputRoot.XMLNSC.nsInfoCli:consultarDatosCobranzaRequest.nsInfoCli:request.nsComun:usuarioM2K);		
		SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.ns:Request.region = FIELDVALUE(InputRoot.XMLNSC.nsInfoCli:consultarDatosCobranzaRequest.nsInfoCli:request.nsComun:region);
		SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.ns:Request.function = 'I*1E';
		SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.ns:Request.action = 'C';
		SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.ns:Request.inputParameters.servicio.p01telefono = FIELDVALUE(InputRoot.XMLNSC.nsInfoCli:consultarDatosCobranzaRequest.nsInfoCli:request.nsInfoCli:telefono);
		SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.ns:Request.inputParameters.servicio.p01telefono.(XMLNSC.Attribute)longitud VALUE = '10';
		SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.ns:Request.inputParameters.servicio.p02cuenta = FIELDVALUE(InputRoot.XMLNSC.nsInfoCli:consultarDatosCobranzaRequest.nsInfoCli:request.nsInfoCli:cuenta);
		SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.ns:Request.inputParameters.servicio.p02cuenta.(XMLNSC.Attribute)longitud VALUE = '09';

		SET OutputRoot.MQMD.CorrelId = InputRoot.MQMD.MsgId;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE MapDatosCobranzaReq_ReactcReq_FanOut
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE ns NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/cobranza/react/c';
		
		CALL CopyMessageHeaders(InputRoot, OutputRoot);
		
		SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.ns:Request.user = FIELDVALUE(InputRoot.XMLNSC.nsInfoCli:consultarDatosCobranzaRequest.nsInfoCli:request.nsComun:usuarioM2K);		
		SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.ns:Request.region = FIELDVALUE(InputRoot.XMLNSC.nsInfoCli:consultarDatosCobranzaRequest.nsInfoCli:request.nsComun:region);
		SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.ns:Request.function = 'I*I5';
		SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.ns:Request.action = 'C';
		SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.ns:Request.inputParameters.servicio.p01telefono = FIELDVALUE(InputRoot.XMLNSC.nsInfoCli:consultarDatosCobranzaRequest.nsInfoCli:request.nsInfoCli:telefono);
		SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.ns:Request.inputParameters.servicio.p01telefono.(XMLNSC.Attribute)longitud VALUE = '10';
		SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.ns:Request.inputParameters.servicio.p02cuenta = FIELDVALUE(InputRoot.XMLNSC.nsInfoCli:consultarDatosCobranzaRequest.nsInfoCli:request.nsInfoCli:cuenta);
		SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.ns:Request.inputParameters.servicio.p02cuenta.(XMLNSC.Attribute)longitud VALUE = '09';

		SET OutputRoot.MQMD.CorrelId = InputRoot.MQMD.MsgId;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE Cob_ExtractFaultToXMLNSC
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot.Properties = InputRoot.Properties;	
		SET OutputRoot.XMLNSC = InputRoot.SOAP.Body;		
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE SetMQMDLocalEnv
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN		
		SET OutputLocalEnvironment.Variables.MQMD = InputRoot.MQMD;
		
		CALL CopyMessageHeaders(InputRoot, OutputRoot);
		CALL CopyEntireMessage(InputRoot, OutputRoot);
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE SetLocalEnvMQMD
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.MQMD = InputLocalEnvironment.Variables.MQMD;		
		SET OutputRoot.XMLNSC = InputRoot.XMLNSC;		
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE Store_MQMDCorrelId
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		Set OutputRoot.MQMD = InputRoot.MQMD;
		Set OutputRoot.BLOB.BLOB = InputRoot.MQMD.CorrelId; 
		SET OutputRoot.MQMD.CorrelId = InputLocalEnvironment.WrittenDestination.MQ.DestinationData.msgId;
		SET OutputRoot.MQMD.Expiry = MQEI_UNLIMITED; 	
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE FanInConsultarDatosCobranza_CorrelID
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders(InputRoot, OutputRoot);
		CALL CopyEntireMessage(InputRoot, OutputRoot);
		SET OutputRoot.Properties.ReplyIdentifier = InputLocalEnvironment.BLOB.BLOB;
		SET OutputRoot.MQMD.MsgId = InputLocalEnvironment.BLOB.BLOB;
		SET OutputRoot.MQMD.CorrelId = InputLocalEnvironment.BLOB.BLOB;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE SynchRR_Cob_SetResponseMode
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET Environment.PatternVariables.RRMode = 'Response';
		RETURN TRUE;
		END;
END MODULE;

CREATE DATABASE MODULE SynchRR_Cob_Initialise
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET Environment.PatternVariables.StatusCode = 0;
		DECLARE EVRef REFERENCE TO Environment.PatternVariables;
		SET EVRef.RRMode = 'Request';
		-- Set the broker queue manager here to save a compute node later
		SET EVRef.BrokerQueueManager = SQL.QueueManagerName;
		SET EVRef.SOAPReplyIdentifier = 
			LocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE SynchRR_Cob_RestoreReplyId
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = InputLocalEnvironment.BLOB.BLOB;
		SET OutputRoot.Properties.CodedCharSetId = 1208;
		SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE Cob_STRIP
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE SynchRR_Cob_BuildStoreMsg
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		Set OutputRoot.MQMD = InputRoot.MQMD; 
		SET OutputRoot.BLOB.BLOB = 	Environment.PatternVariables.SOAPReplyIdentifier;
		SET OutputRoot.MQMD.CorrelId = InputLocalEnvironment.WrittenDestination.MQ.DestinationData.msgId;
		SET OutputRoot.MQMD.Expiry = MQEI_UNLIMITED; 	
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE BuildConsultarDatosCobranzaResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE nsCpastc NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/cobranza/cpast/c';
		DECLARE nsRetc2c NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/activaciones/retc2/c';
		DECLARE nsReactc NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/cobranza/react/c';
		DECLARE oldNamespace NAMESPACE '';
		DECLARE existenErrores BOOLEAN FALSE;
		DECLARE existenErroresGT BOOLEAN FALSE;
		
		SET OutputRoot.Properties = InputRoot.ComIbmAggregateReplyBody.AggregateCpastcReq.Properties;
		SET OutputRoot.MQMD = InputRoot.ComIbmAggregateReplyBody.AggregateCpastcReq.MQMD;
	    SET OutputRoot.MQMD.CorrelId = OutputRoot.MQMD.MsgId;
		SET OutputRoot.Properties.ReplyIdentifier = OutputRoot.MQMD.MsgId;
		
		IF  FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateCpastcReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError) IS NOT NULL OR
			FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateRetc2cReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError) IS NOT NULL OR 
			FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateReactcReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError) IS NOT NULL THEN
			
			SET existenErrores = TRUE; 
		ELSEIF FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateCpastcReq.XMLNSC.soapenv:Envelope.soapenv:Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException) IS NOT NULL OR
			FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateRetc2cReq.XMLNSC.soapenv:Envelope.soapenv:Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException) IS NOT NULL OR
			FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateReactcReq.XMLNSC.soapenv:Envelope.soapenv:Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException) IS NOT NULL THEN
			
			SET existenErroresGT = TRUE;
		END IF;
			
		IF existenErrores THEN
			SET OutputRoot.XMLNSC.soapenv:Fault.faultcode = 'NS1:Server';
			SET OutputRoot.XMLNSC.soapenv:Fault.faultstring = 'Ocurri√≥ un error al consultar los datos de cobranza del cliente.';
			SET OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:servicio = 'GestionTramitesInfoClienteService';
			SET OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:operacion = 'consultarDatosCobranza';
			
			IF FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateCpastcReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError) IS NOT NULL THEN
				CALL M2KErrorToGTWMBException(OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException,
					InputRoot.ComIbmAggregateReplyBody.AggregateCpastcReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError,
					InputRoot.ComIbmAggregateReplyBody.AggregateCpastcReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError.ESTATUS.IDPETICION,
					'm2k - Cpast (function: I*3B, action: C)',
					EX_SOL_M2K_CPASTC);
			END IF;
			
			IF FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateRetc2cReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError) IS NOT NULL THEN
				CALL M2KErrorToGTWMBException(OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException,
					InputRoot.ComIbmAggregateReplyBody.AggregateRetc2cReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError,
					InputRoot.ComIbmAggregateReplyBody.AggregateRetc2cReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError.ESTATUS.IDPETICION,
					'm2k - Retc2 (function: I*1E, action: C)',
					EX_SOL_M2K_RETC2C);
			END IF;
			
			IF FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateReactcReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError) IS NOT NULL THEN
				CALL M2KErrorToGTWMBException(OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException,
					InputRoot.ComIbmAggregateReplyBody.AggregateReactcReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError,
					InputRoot.ComIbmAggregateReplyBody.AggregateReactcReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError.ESTATUS.IDPETICION,
					'm2k - React (function: I*I5, action: C)',
					EX_SOL_M2K_REACTC);
			END IF;
		ELSEIF existenErroresGT THEN
			DECLARE index INTEGER 0;
			SET OutputRoot.XMLNSC.soapenv:Fault.faultcode = 'NS1:Server';
			SET OutputRoot.XMLNSC.soapenv:Fault.faultstring = 'Ocurri√≥ un error al consultar los datos de cobranza del cliente.';
			SET OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:servicio = 'GestionTramitesInfoClienteService';
			SET OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:operacion = 'consultarDatosCobranza';
			
			
			IF FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateCpastcReq.XMLNSC.soapenv:Envelope.soapenv:Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException) IS NOT NULL THEN
				SET index = index + 1;
				SET OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:errores.nsComun:error[index] =
						InputRoot.ComIbmAggregateReplyBody.AggregateCpastcReq.XMLNSC.soapenv:Envelope.soapenv:Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:errores.nsComun:error[1]; 
			END IF;
			IF FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateRetc2cReq.XMLNSC.soapenv:Envelope.soapenv:Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException) IS NOT NULL THEN
				SET index = index + 1;
				SET OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:errores.nsComun:error[index] =
						InputRoot.ComIbmAggregateReplyBody.AggregateRetc2cReq.XMLNSC.soapenv:Envelope.soapenv:Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:errores.nsComun:error[1];
			END IF;
			IF FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateReactcReq.XMLNSC.soapenv:Envelope.soapenv:Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException) IS NOT NULL THEN
				SET index = index + 1;
				SET OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:errores.nsComun:error[index] =
						InputRoot.ComIbmAggregateReplyBody.AggregateReactcReq.XMLNSC.soapenv:Envelope.soapenv:Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:errores.nsComun:error[1];
			END IF;
		ELSE
			DECLARE respuestaOKCpastc REFERENCE TO InputRoot.ComIbmAggregateReplyBody.AggregateCpastcReq.XMLNSC.nsCpastc:RespuestaOK;		
			DECLARE respuestaOKRetc2c REFERENCE TO InputRoot.ComIbmAggregateReplyBody.AggregateRetc2cReq.XMLNSC.nsRetc2c:RespuestaOK;
			DECLARE respuestaOKReactc REFERENCE TO InputRoot.ComIbmAggregateReplyBody.AggregateReactcReq.XMLNSC.nsReactc:RespuestaOK;
			
			CREATE FIRSTCHILD OF OutputRoot.XMLNSC Domain('XMLNSC') NAME 'consultarDatosCobranzaResponse';
			CREATE FIRSTCHILD OF OutputRoot.XMLNSC.consultarDatosCobranzaResponse Domain('XMLNSC') NAME 'response';
			CALL ChangeNamespaceInOutputRoot(OutputRoot.XMLNSC, oldNamespace, nsInfoCli);
			CALL ChangeNamespaceInOutputRoot(OutputRoot.XMLNSC.nsInfoCli:consultarDatosCobranzaResponse, oldNamespace, nsInfoCli);
			
			DECLARE limiteCredito CHARACTER REPLACE(TRIM(respuestaOKRetc2c.LimiteCredito), ',', '');
			DECLARE accionCobranza CHARACTER '';
			DECLARE motivoCobranza CHARACTER '';
			
			IF limiteCredito = '' THEN
				SET limiteCredito = '0';
			END IF;
			
			IF FIELDTYPE(respuestaOKCpastc.TablaCpast.AccionTomada[1]) IS NOT NULL THEN
				SET accionCobranza = TRIM(respuestaOKCpastc.TablaCpast.AccionTomada[1]);
			END IF;
			
			IF FIELDTYPE(respuestaOKCpastc.TablaCpast.Est[1]) IS NOT NULL THEN
				SET motivoCobranza = TRIM(respuestaOKCpastc.TablaCpast.Est[1]);
			END IF;
			
			SET OutputRoot.XMLNSC.nsInfoCli:consultarDatosCobranzaResponse.nsInfoCli:response.nsInfoCli:limiteCredito = limiteCredito;
			SET OutputRoot.XMLNSC.nsInfoCli:consultarDatosCobranzaResponse.nsInfoCli:response.nsInfoCli:accionCobranza = accionCobranza;
			SET OutputRoot.XMLNSC.nsInfoCli:consultarDatosCobranzaResponse.nsInfoCli:response.nsInfoCli:motivoCobranza = motivoCobranza;
			SET OutputRoot.XMLNSC.nsInfoCli:consultarDatosCobranzaResponse.nsInfoCli:response.nsInfoCli:montoMinimoPagar = REPLACE(TRIM(respuestaOKReactc.SaldoActual), ',', '');
		END IF;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE Build_GT_InfoClienteFaultResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.MQMD = InputRoot.MQMD;
		--SET OutputRoot.MQMD.MsgType = MQMT_REPLY;
		
		DECLARE detalleExcepcion CHARACTER AddExceptionDetail(InputExceptionList, InputRoot.Properties);
		DECLARE tipoError CHARACTER EX_TIPO_SIS;
		
		SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body = '';
		DECLARE soapBody REFERENCE TO OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body;
		
		CALL BuildException(tipoError, soapBody, detalleExcepcion, InputLocalEnvironment, 'InfoClienteService');
		RETURN TRUE;
	END;
END MODULE;