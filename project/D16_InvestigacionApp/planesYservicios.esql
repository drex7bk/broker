CREATE COMPUTE MODULE MapIgtoc41dResp_Response
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE ns NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/activaciones/igtoc41/d';
		DECLARE oldNamespace NAMESPACE '';
		
		DECLARE respuestaOK REFERENCE TO InputRoot.XMLNSC.ns:RespuestaOK;
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC Domain('XMLNSC') NAME 'consultarDetallePlanTarifarioResponse';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.consultarDetallePlanTarifarioResponse Domain('XMLNSC') NAME 'response';
		CALL ChangeNamespaceInOutputRoot(OutputRoot.XMLNSC, oldNamespace, nsInvest);
		CALL ChangeNamespaceInOutputRoot(OutputRoot.XMLNSC.nsInvest:consultarDetallePlanTarifarioResponse, oldNamespace, nsInvest);
		CALL MapDetallePlanTarifResponse(OutputRoot, respuestaOK, ns);
	END;
END MODULE;

CREATE FUNCTION MapDetallePlanTarifResponse(IN outputRootNode REFERENCE, IN respuestaOK REFERENCE, IN pNamespace CHARACTER)
BEGIN
	IF FIELDTYPE (respuestaOK.PlanTarifarioYDesc) IS NOT NULL THEN
		SET outputRootNode.XMLNSC.nsInvest:consultarDetallePlanTarifarioResponse.nsInvest:response.nsInvest:detallePlanTarifario.nsInvest:descripcionPlan = TRIM(respuestaOK.PlanTarifarioYDesc);
		SET outputRootNode.XMLNSC.nsInvest:consultarDetallePlanTarifarioResponse.nsInvest:response.nsInvest:detallePlanTarifario.nsInvest:plazoForzoso = TRIM(respuestaOK.Plazo);
		SET outputRootNode.XMLNSC.nsInvest:consultarDetallePlanTarifarioResponse.nsInvest:response.nsInvest:detallePlanTarifario.nsInvest:tipoPlan = TRIM(respuestaOK.TipPlan);
		SET outputRootNode.XMLNSC.nsInvest:consultarDetallePlanTarifarioResponse.nsInvest:response.nsInvest:detallePlanTarifario.nsInvest:descripcionTipoPlan = TRIM(respuestaOK.DescTipo);
		SET outputRootNode.XMLNSC.nsInvest:consultarDetallePlanTarifarioResponse.nsInvest:response.nsInvest:detallePlanTarifario.nsInvest:minutosIncluidos = TRIM(respuestaOK.MinInc);
		SET outputRootNode.XMLNSC.nsInvest:consultarDetallePlanTarifarioResponse.nsInvest:response.nsInvest:detallePlanTarifario.nsInvest:smsIncluidos = TRIM(respuestaOK.SmsInc);
		SET outputRootNode.XMLNSC.nsInvest:consultarDetallePlanTarifarioResponse.nsInvest:response.nsInvest:detallePlanTarifario.nsInvest:datosIncluidos = TRIM(respuestaOK.DatInc);
		SET outputRootNode.XMLNSC.nsInvest:consultarDetallePlanTarifarioResponse.nsInvest:response.nsInvest:detallePlanTarifario.nsInvest:costoPlan = REPLACE(TRIM(respuestaOK.CosPl), ',', '');
	END IF;
	
	DECLARE countArr INT CARDINALITY(respuestaOK.Producto[]);	

	DECLARE i INTEGER 1;
	DECLARE j INTEGER 1;
	
	X : WHILE i <= countArr DO			
		IF  TRIM(respuestaOK.Producto[i]) <> '' OR 
			TRIM(respuestaOK.DescProducto[i])  <> '' OR
			TRIM(respuestaOK.CostpProd[i])  <> '' THEN
			
			SET outputRootNode.XMLNSC.nsInvest:consultarDetallePlanTarifarioResponse.nsInvest:response.nsInvest:productosDePlan.nsInvest:producto[j].nsInvest:producto = TRIM(respuestaOK.Producto[i]);
			SET outputRootNode.XMLNSC.nsInvest:consultarDetallePlanTarifarioResponse.nsInvest:response.nsInvest:productosDePlan.nsInvest:producto[j].nsInvest:descripcion = TRIM(respuestaOK.DescProducto[i]);
			SET outputRootNode.XMLNSC.nsInvest:consultarDetallePlanTarifarioResponse.nsInvest:response.nsInvest:productosDePlan.nsInvest:producto[j].nsInvest:costo = REPLACE(TRIM(respuestaOK.CostpProd[i]), ',', '');
			SET j = j + 1;
		END IF;
		SET i = i + 1;
	END WHILE X;
	
	IF TRIM(respuestaOK.Referencia) <> '' THEN
		SET outputRootNode.XMLNSC.nsInvest:consultarDetallePlanTarifarioResponse.nsInvest:response.nsInvest:referencia = TRIM(respuestaOK.Referencia);
	END IF;

	IF FIELDTYPE (outputRootNode.XMLNSC.nsInvest:consultarDetallePlanTarifarioResponse.nsInvest:response.nsInvest:productosDePlan) IS NULL AND
	   FIELDTYPE (outputRootNode.XMLNSC.nsInvest:consultarDetallePlanTarifarioResponse.nsInvest:response.nsInvest:detallePlanTarifario) IS NULL THEN
		SET outputRootNode.XMLNSC.nsInvest:consultarDetalleConexionesResponse.nsInvest:response.nsComun:mensajes.nsComun:mensaje.nsComun:codigo = '000000';
		SET outputRootNode.XMLNSC.nsInvest:consultarDetalleConexionesResponse.nsInvest:response.nsComun:mensajes.nsComun:mensaje.nsComun:descripcion = 'No se encontraron registros';
	END IF;
END;

CREATE COMPUTE MODULE GuardarVariablesDetalleProducto
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyEntireMessage(InputRoot, OutputRoot);
		
		DECLARE usuarioM2K CHARACTER FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarDetalleProductoRequest.nsInvest:request.nsComun:usuarioM2K);
		DECLARE region CHARACTER FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarDetalleProductoRequest.nsInvest:request.nsComun:region);
		DECLARE telefono CHARACTER FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarDetalleProductoRequest.nsInvest:request.nsInvest:telefono);
		DECLARE cuenta CHARACTER FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarDetalleProductoRequest.nsInvest:request.nsInvest:cuenta);
		DECLARE fechaInicio CHARACTER FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarDetalleProductoRequest.nsInvest:request.nsInvest:fechaInicio);
		DECLARE fechaFin CHARACTER FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarDetalleProductoRequest.nsInvest:request.nsInvest:fechaFin);
		DECLARE producto CHARACTER FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarDetalleProductoRequest.nsInvest:request.nsInvest:producto);
		
		SET OutputLocalEnvironment.Variables.request[] = 
						LIST{ROW(telefono AS telefono,
								cuenta AS cuenta,
								fechaInicio AS fechaInicio,
								fechaFin AS fechaFin,
								usuarioM2K AS usuarioM2K,
								region AS region,
								producto AS producto)};
	END;
END MODULE;

CREATE COMPUTE MODULE GuardarVariablesDetalleProductoTipoGrupo
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyEntireMessage(InputRoot, OutputRoot);
		
		SET OutputLocalEnvironment.variables.tipoGrupo = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarDetalleProductoRequest.nsInvest:request.nsInvest:referencia.nsInvest:tipoGrupo);	
	END;
END MODULE;

CREATE FUNCTION MapDetalleProducto(IN outputRootNode REFERENCE, IN respuestaOK REFERENCE)
BEGIN
	SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:detalleProducto.nsInvest:claveProducto = TRIM(respuestaOK.ClaveProdto);
	SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:detalleProducto.nsInvest:descripcionProducto = TRIM(respuestaOK.DescProdto);
	SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:detalleProducto.nsInvest:costoProducto = REPLACE(TRIM(respuestaOK.CostoProdto), ',', '');
	SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:detalleProducto.nsInvest:caracteristicasProducto = TRIM(respuestaOK.CaracProdto);
	SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:detalleProducto.nsInvest:minutosIncluidos = 0;
	SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:detalleProducto.nsInvest:smsIncluidos = 0;
	SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:detalleProducto.nsInvest:datosIncluidos = 0;
	SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:detalleProducto.nsInvest:unidad = TRIM(respuestaOK.Uni);
	SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:detalleProducto.nsInvest:claveGrupo = TRIM(respuestaOK.Idgrp);
	
	IF TRIM(respuestaOK.Uni) <> '' THEN
		IF TRIM(respuestaOK.Uni) = 'KB' THEN
			SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:detalleProducto.nsInvest:datosIncluidos = TRIM(respuestaOK.DatoAdicional);
		ELSEIF TRIM(respuestaOK.Uni) = 'MIN' THEN
			SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:detalleProducto.nsInvest:minutosIncluidos = TRIM(respuestaOK.DatoAdicional);
		ELSEIF TRIM(respuestaOK.Uni) = 'SMS' THEN
			SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:detalleProducto.nsInvest:smsIncluidos = TRIM(respuestaOK.DatoAdicional);
		END IF;
	END IF;
END;

CREATE FUNCTION MapGrupoLlamadasResponse(IN outputRootNode REFERENCE, IN respuestaOK REFERENCE, IN pTipoGrupo CHARACTER)
BEGIN
	DECLARE countArr INT CARDINALITY(respuestaOK.TelGrupo[]);	

	DECLARE i INTEGER 1;
	DECLARE j INTEGER 1;
	
	X : WHILE i <= countArr DO			
		IF  TRIM(respuestaOK.TelGrupo[i]) <> '' OR 
			TRIM(respuestaOK.TipoServ[i]) <> '' OR
			TRIM(respuestaOK.TipoDest[i]) <> '' OR
			TRIM(respuestaOK.Estatus[i]) <> '' OR
			TRIM(respuestaOK.FecEfe[i]) <> '' THEN
			
			SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:grupoLlamadas.nsInvest:llamada[j].nsInvest:telefono = TRIM(respuestaOK.TelGrupo[i]);
			SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:grupoLlamadas.nsInvest:llamada[j].nsInvest:tipoServicio = TRIM(respuestaOK.TipoServ[i]);
			SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:grupoLlamadas.nsInvest:llamada[j].nsInvest:tipoDestino = TRIM(respuestaOK.TipoDest[i]);
			SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:grupoLlamadas.nsInvest:llamada[j].nsInvest:estatus = TRIM(respuestaOK.Estatus[i]);
			SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:grupoLlamadas.nsInvest:llamada[j].nsInvest:fechaEfectiva = TRIM(respuestaOK.FecEfe[i]);
			SET j = j + 1;
		END IF;
		SET i = i + 1;
	END WHILE X;
	
	IF TRIM(respuestaOK.Referencia) <> '' THEN
		SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:referencia.nsInvest:tipoGrupo = pTipoGrupo;
		SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:referencia.nsInvest:idGrupo = SUBSTRING(respuestaOK.Referencia FROM 1 FOR 10);
		SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:referencia.nsInvest:telefono = SUBSTRING(respuestaOK.Referencia FROM 11 FOR 10);
		SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:referencia.nsInvest:effDate = SUBSTRING(respuestaOK.Referencia FROM 21 FOR 7);
	END IF;

	IF FIELDTYPE (outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:grupoLlamadas) IS NULL AND
		FIELDTYPE (outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsInvest:detalleProducto) IS NULL THEN
		SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsComun:mensajes.nsComun:mensaje.nsComun:codigo = '000000';
		SET outputRootNode.XMLNSC.nsInvest:consultarDetalleProductoResponse.nsInvest:response.nsComun:mensajes.nsComun:mensaje.nsComun:descripcion = 'No se encontraron registros';
	END IF;
END;

CREATE FILTER MODULE ExisteReferenciaGrupoLlamadas
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 IF FIELDTYPE (Root.XMLNSC.nsInvest:consultarDetalleProductoRequest.nsInvest:request.nsInvest:referencia) IS NOT NULL THEN
		 	RETURN TRUE;
		 END IF;
		 RETURN FALSE;
	END;
END MODULE;

CREATE FILTER MODULE ExisteGrpId
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE ns NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/activaciones/igtoc50/c';
		IF  FIELDTYPE (Root.XMLNSC.ns:RespuestaOK.Idgrp) IS NOT NULL AND TRIM(Root.XMLNSC.ns:RespuestaOK.Idgrp) <> '' THEN
			RETURN TRUE;
		END IF;
		RETURN FALSE;
	END;
END MODULE;

CREATE COMPUTE MODULE MapIgtoc50cResp_Igtoc51cReq
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE ns NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/activaciones/igtoc51/c';
		DECLARE ns50c NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/activaciones/igtoc50/c';
		DECLARE oldNamespace NAMESPACE '';
		SET OutputLocalEnvironment = InputLocalEnvironment;
		
		DECLARE respuestaOK REFERENCE TO InputRoot.XMLNSC.ns50c:RespuestaOK;
		DECLARE requestInput REFERENCE TO InputLocalEnvironment.Variables.request[1];
		
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC Domain('XMLNSC') NAME 'Request';
		CALL ChangeNamespaceInOutputRoot(OutputRoot.XMLNSC, oldNamespace, ns);
		
		SET OutputRoot.XMLNSC.ns:Request.user = InputLocalEnvironment.Variables.request[1].usuarioM2K;
		SET OutputRoot.XMLNSC.ns:Request.region = InputLocalEnvironment.Variables.request[1].region;
		SET OutputRoot.XMLNSC.ns:Request.function = 'I*SB';
		SET OutputRoot.XMLNSC.ns:Request.action = 'C';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p01telefono = InputLocalEnvironment.Variables.request[1].telefono;
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p01telefono.(XMLNSC.Attribute)longitud VALUE = '10';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p02cuenta = InputLocalEnvironment.Variables.request[1].cuenta;
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p02cuenta.(XMLNSC.Attribute)longitud VALUE = '09';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p03fechaInicio = InputLocalEnvironment.Variables.request[1].fechaInicio;
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p03fechaInicio.(XMLNSC.Attribute)longitud VALUE = '08';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p04fechaFin = InputLocalEnvironment.Variables.request[1].fechaFin;
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p04fechaFin.(XMLNSC.Attribute)longitud VALUE = '08';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p05producto = InputLocalEnvironment.Variables.request[1].producto;
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p05producto.(XMLNSC.Attribute)longitud VALUE = '05';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p06tipoGrupo = TRIM(respuestaOK.Idgrp);
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p06tipoGrupo.(XMLNSC.Attribute)longitud VALUE = '02';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p07idGrupo = '';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p07idGrupo.(XMLNSC.Attribute)longitud VALUE = '10';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p08refTelefono = '';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p08refTelefono.(XMLNSC.Attribute)longitud VALUE = '10';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p09refEffDt = '';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p09refEffDt.(XMLNSC.Attribute)longitud VALUE = '07';
		
		SET OutputLocalEnvironment.Variables.response50c = respuestaOK; 		
		
		--DECLARE ClaveProdto CHARACTER respuestaOK.ClaveProdto;
		--DECLARE DescProdto CHARACTER respuestaOK.DescProdto;
		--DECLARE CostoProdto CHARACTER respuestaOK.CostoProdto;
		--DECLARE CaracProdto CHARACTER respuestaOK.CaracProdto;
		--DECLARE DatoAdicional CHARACTER respuestaOK.DatoAdicional;
		--DECLARE Uni CHARACTER respuestaOK.Uni;
		--DECLARE Idgrp CHARACTER respuestaOK.Idgrp;

		--SET OutputLocalEnvironment.Variables.response50c[] = 
		--								LIST{ROW(ClaveProdto as ClaveProdto,
		--										DescProdto as DescProdto,
		--										CostoProdto as CostoProdto,
		--										CaracProdto as CaracProdto,
		--										DatoAdicional as DatoAdicional,
		--										Uni as Uni,
		--										Idgrp as Idgrp
		--									)};
	END;
END MODULE;

CREATE COMPUTE MODULE MapIgtoc50cResp_Response
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE ns NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/activaciones/igtoc50/c';
		DECLARE oldNamespace NAMESPACE '';
		
		DECLARE respuestaOK REFERENCE TO InputRoot.XMLNSC.ns:RespuestaOK;
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC Domain('XMLNSC') NAME 'consultarDetalleProductoResponse';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.consultarDetalleProductoResponse Domain('XMLNSC') NAME 'response';
		CALL ChangeNamespaceInOutputRoot(OutputRoot.XMLNSC, oldNamespace, nsInvest);		
		CALL ChangeNamespaceInOutputRoot(OutputRoot.XMLNSC.nsInvest:consultarDetalleProductoResponse, oldNamespace, nsInvest);
		
		CALL MapDetalleProducto(OutputRoot, respuestaOK);
	END;
END MODULE;

CREATE COMPUTE MODULE MapIgtoc51cResp_Response
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE ns NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/activaciones/igtoc51/c';
		DECLARE oldNamespace NAMESPACE '';
		
		DECLARE respuestaOK REFERENCE TO InputRoot.XMLNSC.ns:RespuestaOK;
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC Domain('XMLNSC') NAME 'consultarDetalleProductoResponse';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.consultarDetalleProductoResponse Domain('XMLNSC') NAME 'response';
		CALL ChangeNamespaceInOutputRoot(OutputRoot.XMLNSC, oldNamespace, nsInvest);		
		CALL ChangeNamespaceInOutputRoot(OutputRoot.XMLNSC.nsInvest:consultarDetalleProductoResponse, oldNamespace, nsInvest);
		
		DECLARE tipoGrupo CHARACTER;
		IF FIELDTYPE(InputLocalEnvironment.variables.tipoGrupo) IS NOT NULL THEN
			SET tipoGrupo = InputLocalEnvironment.variables.tipoGrupo;
		END IF;
		
		IF FIELDTYPE(InputLocalEnvironment.Variables.response50c) IS NOT NULL THEN
			CALL MapDetalleProducto(OutputRoot, InputLocalEnvironment.Variables.response50c);
			SET tipoGrupo = InputLocalEnvironment.Variables.response50c.Idgrp;
		END IF;
		CALL MapGrupoLlamadasResponse(OutputRoot, respuestaOK, tipoGrupo);
	END;
END MODULE;

CREATE COMPUTE MODULE MapPlanesYServiciosReq_Igtoc41rReq_FanOut
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE ns NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/activaciones/igtoc41/r';
		DECLARE soapenv NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';
		
		CALL CopyMessageHeaders(InputRoot, OutputRoot);
		
		SET OutputRoot.XMLNSC.ns:Request.user = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsComun:usuarioM2K);		
		SET OutputRoot.XMLNSC.ns:Request.region = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsComun:region);
		SET OutputRoot.XMLNSC.ns:Request.function = 'I*S1';
		SET OutputRoot.XMLNSC.ns:Request.action = 'R';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p01telefono = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:telefono);
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p01telefono.(XMLNSC.Attribute)longitud VALUE = '10';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p02cuenta = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:cuenta);
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p02cuenta.(XMLNSC.Attribute)longitud VALUE = '09';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p03fechaInicio = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:fechaInicio);
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p03fechaInicio.(XMLNSC.Attribute)longitud VALUE = '08';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p04fechaFin = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:fechaFin);
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p04fechaFin.(XMLNSC.Attribute)longitud VALUE = '08';
		
		IF FIELDTYPE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:referenciaPlanesTarifarios) IS NOT NULL THEN
			SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p05planPiv = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:referenciaPlanesTarifarios.nsInvest:plan);
			SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p06fechaPiv = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:referenciaPlanesTarifarios.nsInvest:fecha);
		ELSE
			SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p05planPiv = '';
			SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p06fechaPiv = '';
		END IF;
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p05planPiv.(XMLNSC.Attribute)longitud VALUE = '05';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p06fechaPiv.(XMLNSC.Attribute)longitud VALUE = '07';
		
		SET OutputRoot.MQMD.CorrelId = InputRoot.MQMD.MsgId;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE MapPlanesYServiciosReq_Igtoc44dReq_FanOut
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE ns NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/activaciones/igtoc44/d';
		DECLARE soapenv NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';
		
		CALL CopyMessageHeaders(InputRoot, OutputRoot);
		
		SET OutputRoot.XMLNSC.ns:Request.user = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsComun:usuarioM2K);		
		SET OutputRoot.XMLNSC.ns:Request.region = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsComun:region);
		SET OutputRoot.XMLNSC.ns:Request.function = 'I*S4';
		SET OutputRoot.XMLNSC.ns:Request.action = 'D';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p01telefono = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:telefono);
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p01telefono.(XMLNSC.Attribute)longitud VALUE = '10';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p02cuenta = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:cuenta);
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p02cuenta.(XMLNSC.Attribute)longitud VALUE = '09';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p03fechaInicio = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:fechaInicio);
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p03fechaInicio.(XMLNSC.Attribute)longitud VALUE = '08';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p04fechaFin = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:fechaFin);
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p04fechaFin.(XMLNSC.Attribute)longitud VALUE = '08';
		
		IF FIELDTYPE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:referenciaServiciosAdicionales) IS NOT NULL THEN
			SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p05claveProdPiv = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:referenciaServiciosAdicionales.nsInvest:claveProd);
			SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p06fechaProdPiv = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:referenciaServiciosAdicionales.nsInvest:fechaProd);
			SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p07estatusProdPiv = FIELDVALUE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:referenciaServiciosAdicionales.nsInvest:estatusProd);
		ELSE
			SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p05claveProdPiv = '';
			SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p06fechaProdPiv = '';
			SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p07estatusProdPiv = '';
		END IF;
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p05claveProdPiv.(XMLNSC.Attribute)longitud VALUE = '05';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p06fechaProdPiv.(XMLNSC.Attribute)longitud VALUE = '07';
		SET OutputRoot.XMLNSC.ns:Request.inputParameters.servicio.p07estatusProdPiv.(XMLNSC.Attribute)longitud VALUE = '01';
		
		SET OutputRoot.MQMD.CorrelId = InputRoot.MQMD.MsgId;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE BuildConsultarPlanesYServiciosResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE nsIgtoc41r NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/activaciones/igtoc41/r';
		DECLARE nsIgtoc44d NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/activaciones/igtoc44/d';
		DECLARE oldNamespace NAMESPACE '';
		DECLARE existenErrores BOOLEAN FALSE;
		DECLARE existenErroresGT BOOLEAN FALSE;
		
		SET OutputRoot.Properties = InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc41rReq.Properties;
		SET OutputRoot.MQMD = InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc41rReq.MQMD;
	    SET OutputRoot.MQMD.CorrelId = OutputRoot.MQMD.MsgId;
		SET OutputRoot.Properties.ReplyIdentifier = OutputRoot.MQMD.MsgId;
		
		IF  FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc41rReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError) IS NOT NULL OR
			FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc44dReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError) IS NOT NULL THEN
			
			SET existenErrores = TRUE;
		ELSEIF FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc41rReq.XMLNSC.soapenv:Envelope.soapenv:Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException) IS NOT NULL OR
			FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc44dReq.XMLNSC.soapenv:Envelope.soapenv:Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException) IS NOT NULL THEN
			
			SET existenErroresGT = TRUE;
		END IF;
		
		IF existenErrores THEN
			SET OutputRoot.XMLNSC.soapenv:Fault.faultcode = 'NS1:Server';
			SET OutputRoot.XMLNSC.soapenv:Fault.faultstring = 'Ocurrió un error al consultar planes y servicios.';
			SET OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:servicio = 'GestionTramitesInvestigacionService';
			SET OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:operacion = 'consultarPlanesYServicios';
			
			IF FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc41rReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError) IS NOT NULL THEN
				CALL M2KErrorToGTWMBException(OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException,
					InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc41rReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError,
					InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc41rReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError.ESTATUS.IDPETICION,
					'm2k - Igtoc41 (function: I*S1, action: R)',
					EX_SOL_M2K_IGTOC41R);
			END IF;
			
			IF FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc44dReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError) IS NOT NULL THEN
				CALL M2KErrorToGTWMBException(OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException,
					InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc44dReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError,
					InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc44dReq.XMLNSC.soapenv:Fault.detail.nsM2KFac:RespuestaError.ESTATUS.IDPETICION,
					'm2k - Igtoc44 (function: I*S4, action: D)',
					EX_SOL_M2K_IGTOC44D);
			END IF;
		ELSEIF existenErroresGT THEN
			DECLARE index INTEGER 0;
			
			SET OutputRoot.XMLNSC.soapenv:Fault.faultcode = 'NS1:Server';
			SET OutputRoot.XMLNSC.soapenv:Fault.faultstring = 'Ocurrió un error al consultar planes y servicios.';
			SET OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:servicio = 'GestionTramitesInvestigacionService';
			SET OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:operacion = 'consultarPlanesYServicios';
			
			IF FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc41rReq.XMLNSC.soapenv:Envelope.soapenv:Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException) IS NOT NULL THEN
				SET index = index + 1;
				SET OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:errores.nsComun:error[index] =
						InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc41rReq.XMLNSC.soapenv:Envelope.soapenv:Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:errores.nsComun:error[1];
			END IF;
	
			IF FIELDTYPE(InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc44dReq.XMLNSC.soapenv:Envelope.soapenv:Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException) IS NOT NULL THEN
				SET index = index + 1;
				SET OutputRoot.XMLNSC.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:errores.nsComun:error[index] =
						InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc44dReq.XMLNSC.soapenv:Envelope.soapenv:Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:errores.nsComun:error[1];
			END IF;		
		ELSE
			DECLARE respuestaOK41r REFERENCE TO InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc41rReq.XMLNSC.nsIgtoc41r:RespuestaOK;
			DECLARE respuestaOK44d REFERENCE TO InputRoot.ComIbmAggregateReplyBody.AggregateIgtoc44dReq.XMLNSC.nsIgtoc44d:RespuestaOK;
			
			CREATE FIRSTCHILD OF OutputRoot.XMLNSC Domain('XMLNSC') NAME 'consultarPlanesYServiciosResponse';
			CREATE FIRSTCHILD OF OutputRoot.XMLNSC.consultarPlanesYServiciosResponse Domain('XMLNSC') NAME 'response';
			CALL ChangeNamespaceInOutputRoot(OutputRoot.XMLNSC, oldNamespace, nsInvest);
			CALL ChangeNamespaceInOutputRoot(OutputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosResponse, oldNamespace, nsInvest);
	
			CALL MapPlanesTarifarios(OutputRoot, respuestaOK41r);
			CALL MapServiciosAdicionales(OutputRoot, respuestaOK44d);
		END IF;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE ElegirServicio
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputLocalEnvironment = InputLocalEnvironment;
		SET OutputRoot.Properties = InputRoot.Properties;
		CALL CopyEntireMessage(InputRoot, OutputRoot);
		
		IF (FIELDTYPE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:referenciaPlanesTarifarios) IS NOT NULL AND 
			FIELDTYPE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:referenciaServiciosAdicionales) IS NOT NULL ) OR 
			(FIELDTYPE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:referenciaPlanesTarifarios) IS NULL AND 
			FIELDTYPE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:referenciaServiciosAdicionales) IS NULL) THEN
			--AGGREGATION
			PROPAGATE TO TERMINAL 'out1';
		ELSE
			IF FIELDTYPE(InputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosRequest.nsInvest:request.nsInvest:referenciaPlanesTarifarios) IS NOT NULL THEN
				--IGTOC41R
				PROPAGATE TO TERMINAL 'out2';
			ELSE
				--IGTOC44D
				PROPAGATE TO TERMINAL 'out3';
			END IF;
		END IF;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE MapIgtoc41rResp_Response
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE ns NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/activaciones/igtoc41/r';
		DECLARE oldNamespace NAMESPACE '';
		
		DECLARE respuestaOK REFERENCE TO InputRoot.XMLNSC.ns:RespuestaOK;
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC Domain('XMLNSC') NAME 'consultarPlanesYServiciosResponse';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.consultarPlanesYServiciosResponse Domain('XMLNSC') NAME 'response';
		CALL ChangeNamespaceInOutputRoot(OutputRoot.XMLNSC, oldNamespace, nsInvest);		
		CALL ChangeNamespaceInOutputRoot(OutputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosResponse, oldNamespace, nsInvest);
		
		CALL MapPlanesTarifarios(OutputRoot, respuestaOK);
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE MapIgtoc44dResp_Response
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE ns NAMESPACE 'http://www.telcel.com.mx/di/sds/m2k/activaciones/igtoc44/d';
		DECLARE oldNamespace NAMESPACE '';
		
		DECLARE respuestaOK REFERENCE TO InputRoot.XMLNSC.ns:RespuestaOK;
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC Domain('XMLNSC') NAME 'consultarPlanesYServiciosResponse';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.consultarPlanesYServiciosResponse Domain('XMLNSC') NAME 'response';
		CALL ChangeNamespaceInOutputRoot(OutputRoot.XMLNSC, oldNamespace, nsInvest);		
		CALL ChangeNamespaceInOutputRoot(OutputRoot.XMLNSC.nsInvest:consultarPlanesYServiciosResponse, oldNamespace, nsInvest);
		
		CALL MapServiciosAdicionales(OutputRoot, respuestaOK);
		RETURN TRUE;
	END;
END MODULE;

CREATE FUNCTION MapPlanesTarifarios(IN outputRootNode REFERENCE, IN respuestaOK REFERENCE)
BEGIN
	DECLARE countArr INT CARDINALITY(respuestaOK.PlanTarifarioYDesc[]);

	DECLARE i INTEGER 1;
	DECLARE j INTEGER 1;
	
	X : WHILE i <= countArr DO			
		IF  TRIM(respuestaOK.PlanTarifarioYDesc[i]) <> '' OR 
			TRIM(respuestaOK.FechaEfe[i]) <> '' OR
			TRIM(respuestaOK.Estatus[i]) <> '' OR
			TRIM(respuestaOK.Usuario[i]) <> '' THEN
			
			SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsInvest:planesTarifarios.nsInvest:planTarifario[j].nsInvest:descripcion = TRIM(respuestaOK.PlanTarifarioYDesc[i]);
			SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsInvest:planesTarifarios.nsInvest:planTarifario[j].nsInvest:fechaEfectiva = TRIM(respuestaOK.FechaEfe[i]);
			SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsInvest:planesTarifarios.nsInvest:planTarifario[j].nsInvest:estatus = TRIM(respuestaOK.Estatus[i]);
			SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsInvest:planesTarifarios.nsInvest:planTarifario[j].nsInvest:usuario = TRIM(respuestaOK.Usuario[i]);
			SET j = j + 1;
		END IF;
		SET i = i + 1;
	END WHILE X;
	
	IF TRIM(respuestaOK.Referencia) <> '' THEN
		SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsInvest:referenciaPlanesTarifarios.nsInvest:plan = SUBSTRING(respuestaOK.Referencia FROM 1 FOR 5);
		SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsInvest:referenciaPlanesTarifarios.nsInvest:fecha = SUBSTRING(respuestaOK.Referencia FROM 6 FOR 7);
	END IF;

	IF FIELDTYPE (outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsInvest:planesTarifarios) IS NULL THEN
		DECLARE countMsg INT CARDINALITY(outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsComun:mensajes.nsComun:mensaje[]);

		SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsComun:mensajes.nsComun:mensaje[countMsg+1].nsComun:codigo = '000000';
		SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsComun:mensajes.nsComun:mensaje[countMsg+1].nsComun:descripcion = 'No se encontraron planes tarifarios';
	END IF;
END;

CREATE FUNCTION MapServiciosAdicionales(IN outputRootNode REFERENCE, IN respuestaOK REFERENCE)
BEGIN
	DECLARE countArr INT CARDINALITY(respuestaOK.Producto[]);	

	DECLARE i INTEGER 1;
	DECLARE j INTEGER 1;
	
	X : WHILE i <= countArr DO			
		IF  TRIM(respuestaOK.Producto[i]) <> '' OR 
			TRIM(respuestaOK.InclPlan[i]) <> '' OR
			TRIM(respuestaOK.FechaEfe[i]) <> '' OR
			TRIM(respuestaOK.Est[i]) <> '' OR
			TRIM(respuestaOK.Usuario[i]) <> '' THEN
			
			SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsInvest:serviciosAdicionales.nsInvest:servicioAdicional[j].nsInvest:producto = TRIM(respuestaOK.Producto[i]);
			SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsInvest:serviciosAdicionales.nsInvest:servicioAdicional[j].nsInvest:incluidoEnPlan = TRIM(respuestaOK.InclPlan[i]);
			SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsInvest:serviciosAdicionales.nsInvest:servicioAdicional[j].nsInvest:fechaEfectiva = TRIM(respuestaOK.FechaEfe[i]);
			SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsInvest:serviciosAdicionales.nsInvest:servicioAdicional[j].nsInvest:estatus = TRIM(respuestaOK.Est[i]);
			SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsInvest:serviciosAdicionales.nsInvest:servicioAdicional[j].nsInvest:usuario = TRIM(respuestaOK.Usuario[i]);
			SET j = j + 1;
		END IF;
		SET i = i + 1;
	END WHILE X;
	
	IF TRIM(respuestaOK.Referencia) <> '' THEN
		SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsInvest:referenciaServiciosAdicionales.nsInvest:claveProd = SUBSTRING(respuestaOK.Referencia FROM 1 FOR 5);
		SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsInvest:referenciaServiciosAdicionales.nsInvest:fechaProd = SUBSTRING(respuestaOK.Referencia FROM 6 FOR 7);
		SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsInvest:referenciaServiciosAdicionales.nsInvest:estatusProd = SUBSTRING(respuestaOK.Referencia FROM 13 FOR 1);
	END IF;

	IF FIELDTYPE (outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsInvest:serviciosAdicionales) IS NULL THEN
		DECLARE countMsg INT CARDINALITY(outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsComun:mensajes.nsComun:mensaje[]);
		
		SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsComun:mensajes.nsComun:mensaje[countMsg+1].nsComun:codigo = '000000';
		SET outputRootNode.XMLNSC.nsInvest:consultarPlanesYServiciosResponse.nsInvest:response.nsComun:mensajes.nsComun:mensaje[countMsg+1].nsComun:descripcion = 'No se encontraron servicios adicionales';
	END IF;
END;

CREATE COMPUTE MODULE MapFault_Investigacion_ConsultarDetallePlanTarifario
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot.SOAP.Body.soapenv:Fault.faultcode = 'NS1:Server';
		SET OutputRoot.SOAP.Body.soapenv:Fault.faultstring = 'Ocurrió un error al consultar el detalle de plan tarifario.';
		SET OutputRoot.SOAP.Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:servicio = 'GestionTramitesInvestigacionService';
		SET OutputRoot.SOAP.Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:operacion = 'consultarDetallePlanTarifario';
		
		CALL M2KErrorToGTWMBException(OutputRoot.SOAP.Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException,
				InputRoot.SOAP.Body.soapenv:Fault.detail.nsM2KFac:RespuestaError,
				InputRoot.SOAP.Body.soapenv:Fault.detail.nsM2KFac:RespuestaError.ESTATUS.IDPETICION,
				'm2k - Igtoc41 (function: I*S1, action: D)',
				EX_SOL_M2K_IGTOC41D);
	END;
END MODULE;

CREATE COMPUTE MODULE MapFault_Investigacion_ConsultarDetalleProductoInfo
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot.SOAP.Body.soapenv:Fault.faultcode = 'NS1:Server';
		SET OutputRoot.SOAP.Body.soapenv:Fault.faultstring = 'Ocurrió un error al consultar el detalle del producto.';
		SET OutputRoot.SOAP.Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:servicio = 'GestionTramitesInvestigacionService';
		SET OutputRoot.SOAP.Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:operacion = 'consultarDetalleProducto';
		
		CALL M2KErrorToGTWMBException(OutputRoot.SOAP.Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException,
				InputRoot.SOAP.Body.soapenv:Fault.detail.nsM2KFac:RespuestaError,
				InputRoot.SOAP.Body.soapenv:Fault.detail.nsM2KFac:RespuestaError.ESTATUS.IDPETICION,
				'm2k - Igtoc50 (function: I*S1, action: C)',
				EX_SOL_M2K_IGTOC50C);
	END;
END MODULE;

CREATE COMPUTE MODULE MapFault_Investigacion_Igtoc41R
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot.SOAP.Body.soapenv:Fault.faultcode = 'NS1:Server';
		SET OutputRoot.SOAP.Body.soapenv:Fault.faultstring = 'Ocurrió un error al consultar planes tarifarios.';
		SET OutputRoot.SOAP.Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:servicio = 'GestionTramitesInvestigacionService';
		SET OutputRoot.SOAP.Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:operacion = 'consultarPlanesYServicios';
		
		CALL M2KErrorToGTWMBException(OutputRoot.SOAP.Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException,
				InputRoot.SOAP.Body.soapenv:Fault.detail.nsM2KFac:RespuestaError,
				InputRoot.SOAP.Body.soapenv:Fault.detail.nsM2KFac:RespuestaError.ESTATUS.IDPETICION,
				'm2k - Igtoc41 (function: I*S1, action: R)',
				EX_SOL_M2K_IGTOC41R);
	END;
END MODULE;

CREATE COMPUTE MODULE MapFault_Investigacion_Igtoc44D
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot.SOAP.Body.soapenv:Fault.faultcode = 'NS1:Server';
		SET OutputRoot.SOAP.Body.soapenv:Fault.faultstring = 'Ocurrió un error al consultar servicios adicionales.';
		SET OutputRoot.SOAP.Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:servicio = 'GestionTramitesInvestigacionService';
		SET OutputRoot.SOAP.Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:operacion = 'consultarPlanesYServicios';
		
		CALL M2KErrorToGTWMBException(OutputRoot.SOAP.Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException,
				InputRoot.SOAP.Body.soapenv:Fault.detail.nsM2KFac:RespuestaError,
				InputRoot.SOAP.Body.soapenv:Fault.detail.nsM2KFac:RespuestaError.ESTATUS.IDPETICION,
				'm2k - Igtoc44 (function: I*S4, action: D)',
				EX_SOL_M2K_IGTOC44D);
	END;
END MODULE;

CREATE COMPUTE MODULE MapFault_Investigacion_ConsultarDetalleProductoList
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot.SOAP.Body.soapenv:Fault.faultcode = 'NS1:Server';
		SET OutputRoot.SOAP.Body.soapenv:Fault.faultstring = 'Ocurrió un error al consultar el detalle del producto.';
		SET OutputRoot.SOAP.Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:servicio = 'GestionTramitesInvestigacionService';
		SET OutputRoot.SOAP.Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException.nsComun:operacion = 'consultarDetalleProducto';
		
		CALL M2KErrorToGTWMBException(OutputRoot.SOAP.Body.soapenv:Fault.detail.nsComun:gestionTramitesWMBException,
				InputRoot.SOAP.Body.soapenv:Fault.detail.nsM2KFac:RespuestaError,
				InputRoot.SOAP.Body.soapenv:Fault.detail.nsM2KFac:RespuestaError.ESTATUS.IDPETICION,
				'm2k - Igtoc51 (function: I*SB, action: C)',
				EX_SOL_M2K_IGTOC51C);
	END;
END MODULE;